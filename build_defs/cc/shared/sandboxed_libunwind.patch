diff --git a/sandboxed_api/bazel/external/libunwind.BUILD b/sandboxed_api/bazel/external/libunwind.BUILD
index d6bbe80..b0d37ff 100644
--- a/sandboxed_api/bazel/external/libunwind.BUILD
+++ b/sandboxed_api/bazel/external/libunwind.BUILD
@@ -12,6 +12,8 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+load("@bazel_skylib//rules:common_settings.bzl", "string_flag")
+
 LIBUNWIND_COPTS = [
     "-DHAVE_CONFIG_H",
     "-D_GNU_SOURCE",
@@ -22,7 +24,25 @@ LIBUNWIND_COPTS = [
 
 filegroup(
     name = "internal_headers",
-    srcs = [
+    srcs = select({
+        "@platforms//cpu:x86_64": [
+            "include/libunwind-x86_64.h",
+            "include/tdep-x86_64/dwarf-config.h",
+            "include/tdep-x86_64/libunwind_i.h",
+            "src/x86_64/init.h",
+            "src/x86_64/offsets.h",
+            "src/x86_64/ucontext_i.h",
+            "src/x86_64/unwind_i.h",
+        ],
+        "@platforms//cpu:arm64": [
+            "include/libunwind-aarch64.h",
+            "include/tdep-aarch64/dwarf-config.h",
+            "include/tdep-aarch64/libunwind_i.h",
+            "src/aarch64/init.h",
+            "src/aarch64/offsets.h",
+            "src/aarch64/unwind_i.h",
+        ],
+    }) + [
         "include/compiler.h",
         "include/config.h",
         "include/dwarf.h",
@@ -33,12 +53,9 @@ filegroup(
         "include/libunwind-coredump.h",
         "include/libunwind-dynamic.h",
         "include/libunwind-ptrace.h",
-        "include/libunwind-x86_64.h",
         "include/libunwind_i.h",
         "include/mempool.h",
         "include/remote.h",
-        "include/tdep-x86_64/dwarf-config.h",
-        "include/tdep-x86_64/libunwind_i.h",
         "include/tdep/dwarf-config.h",
         "include/tdep/libunwind_i.h",
         "include/unwind.h",
@@ -46,10 +63,6 @@ filegroup(
         "src/elf64.h",
         "src/elfxx.h",
         "src/os-linux.h",
-        "src/x86_64/init.h",
-        "src/x86_64/offsets.h",
-        "src/x86_64/ucontext_i.h",
-        "src/x86_64/unwind_i.h",
     ],
 )
 
@@ -67,7 +80,34 @@ cc_library(
 
 filegroup(
     name = "sources_common",
-    srcs = [
+    srcs = select({
+        "@platforms//cpu:x86_64": [
+            "src/x86_64/Gcreate_addr_space.c",
+            "src/x86_64/Gglobal.c",
+            "src/x86_64/Ginit.c",
+            "src/x86_64/Ginit_local.c",
+            "src/x86_64/Gos-linux.c",
+            "src/x86_64/Gregs.c",
+            "src/x86_64/Gresume.c",
+            "src/x86_64/Gstash_frame.c",
+            "src/x86_64/Gstep.c",
+            "src/x86_64/getcontext.S",
+            "src/x86_64/is_fpreg.c",
+            "src/x86_64/setcontext.S",
+        ],
+        "@platforms//cpu:arm64": [
+            "src/aarch64/Gcreate_addr_space.c",
+            "src/aarch64/Gglobal.c",
+            "src/aarch64/Ginit.c",
+            "src/aarch64/Ginit_local.c",
+            "src/aarch64/Gis_signal_frame.c",
+            "src/aarch64/Gregs.c",
+            "src/aarch64/Gresume.c",
+            "src/aarch64/Gstash_frame.c",
+            "src/aarch64/Gstep.c",
+            "src/aarch64/is_fpreg.c",
+        ],
+    }) + [
         "src/dwarf/Gexpr.c",
         "src/dwarf/Gfde.c",
         "src/dwarf/Gfind_proc_info-lsb.c",
@@ -86,23 +126,16 @@ filegroup(
         "src/mi/init.c",
         "src/mi/mempool.c",
         "src/os-linux.c",
-        "src/x86_64/Gcreate_addr_space.c",
-        "src/x86_64/Gglobal.c",
-        "src/x86_64/Ginit.c",
-        "src/x86_64/Gos-linux.c",
-        "src/x86_64/Gregs.c",
-        "src/x86_64/Gresume.c",
-        "src/x86_64/Gstash_frame.c",
-        "src/x86_64/Gstep.c",
-        "src/x86_64/is_fpreg.c",
-        "src/x86_64/setcontext.S",
         ":internal_headers",
     ],
 )
 
 filegroup(
     name = "sources_ptrace",
-    srcs = ["src/x86_64/Ginit_remote.c"],
+    srcs = select({
+        "@platforms//cpu:x86_64": ["src/x86_64/Ginit_remote.c"],
+        "@platforms//cpu:arm64": ["src/aarch64/Ginit_remote.c"],
+    }),
 )
 
 cc_library(
