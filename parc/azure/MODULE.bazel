# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

module(
    name = "google_privacysandbox_parc_azure",
    version = "0.1.0",
    compatibility_level = 1,
)

bazel_dep(name = "google_privacysandbox_apis", version = "0.1.0")
local_path_override(
    module_name = "google_privacysandbox_apis",
    path = "/apis-workspace",
)

bazel_dep(name = "abseil-cpp", version = "20250127.0")
bazel_dep(name = "azure-storage-blobs-cpp", version = "12.13.0")
bazel_dep(name = "azure-identity-cpp", version = "1.10.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "boringssl", version = "0.20241024.0")
bazel_dep(name = "curl", version = "8.8.0.bcr.3")
bazel_dep(name = "googletest", version = "1.16.0")
bazel_dep(name = "grpc", version = "1.70.1")
bazel_dep(name = "openssl", version = "3.3.1.bcr.1")
bazel_dep(name = "opentelemetry-cpp", version = "1.19.0")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "protobuf", version = "29.3")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_proto_grpc_cpp", version = "5.0.1")
bazel_dep(name = "rules_python", version = "1.2.0")
bazel_dep(name = "toolchains_protoc", version = "0.3.7")

single_version_override(
    module_name = "grpc",
    patch_strip = 1,
    patches = [
        "//:grpc.patch",
    ],
    version = "1.70.1",
)

# Prevent version skew by matching protoc version to protobuf version, as C++ is the only lang that
# has no cross-version runtime guarantee:
# https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp
protoc = use_extension("@toolchains_protoc//protoc:extensions.bzl", "protoc")
protoc.toolchain(
    google_protobuf = "com_google_protobuf",
    version = "v29.3",
)

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    ignore_root_user_error = True,
    python_version = "3.13",
)
