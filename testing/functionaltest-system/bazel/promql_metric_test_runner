#!/bin/bash

# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit

function check_app() {
  declare -n _app=$1
  check_env_exists "$1"
  if ! command -v "${_app}" >/dev/null; then
    printf "%s command [%s] not found or not executable\n" "$1" "${_app}" &>/dev/stderr
    exit 1
  fi
}

function check_env_exists() {
  local env_var_name=$1
  if [[ -z "${!env_var_name}" ]]; then
    printf "env var [%s] is not set or empty\n" "$env_var_name" &>/dev/stderr
    exit 1
  fi
}

check_app JQ
check_app PROMQL
check_env_exists NAME
check_env_exists PROMQL_ENDPOINT
check_env_exists PROMQL_PREDICATE
check_env_exists TEST_UNDECLARED_OUTPUTS_DIR
check_env_exists PROMQL_START
check_env_exists PROMQL_STEP

TMP_DIR="$(mktemp --directory)"
readonly TMP_DIR
chmod 755 "${TMP_DIR}"

function cleanup() {
  local -r -i STATUS=$?
  if [[ ${STATUS} -eq 0 ]]; then
    rm -rf "${TMP_DIR}"
  fi
  exit ${STATUS}
}
trap cleanup EXIT

declare -a -r promql_args=(
  --start="${PROMQL_START}"
  --step="${PROMQL_STEP}"
  --host="${PROMQL_ENDPOINT}"
  --output=json
)

jsonfile="${TEST_UNDECLARED_OUTPUTS_DIR}/${NAME}.json"
"${PROMQL}" "${promql_args[@]}" "${PROMQL_PREDICATE}" >"${jsonfile}"
[[ $("${JQ}" -r '.[0].values[0][1]' <"${jsonfile}") -eq 1 ]]
